{"version":3,"sources":["components/RecipeDetail.js","components/Recipe.js","components/Pagination.js","components/NoAlert.js","pages/HomePage.js","components/UserRecipe.js","pages/CreatePage.js","components/YesAlert.js","pages/SignupPage.js","pages/LoginPage.js","components/NavigationComponent.js","components/Toogle.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","i","className","recipe","Recipe","useState","show","setShow","item","full_name","src","alt","onClick","RecipeDetail","Pagination","props","role","aria-label","pageCount","Math","ceil","totalPosts","postsPerPage","pageRangeDisplayed","marginPagesDisplayed","onPageChange","handlePageClick","containerClassName","previousClassName","nextClassName","pageClassName","pageLinkClassName","activeClassName","disabledClassName","NoAlert","alert","HomePage","query","setQuery","foods","setfood","currentPage","setCurrentPage","setAlert","indexOfLastPost","indexOfFirstPost","getData","a","fetch","method","headers","body","JSON","stringify","response","json","res","console","log","length","currentPosts","slice","onSubmit","e","preventDefault","target","value","type","name","onChange","event","autoComplete","placeholder","food","selected","UserRecipe","DeletePost","window","location","href","id","CreatePage","username","inputFields","setInputFields","inputFood","setinputFood","inputRecipe","setInputRecipe","useEffect","user","getUserData","PostData","handleChangeInput","handleAddFields","values","push","inputRec","index","handleInputRecipe","splice","handleRemoveFields","YesAlert","SignupPage","inputemail","setinputemail","inputfname","setinputfname","inputlname","setinputlname","inputpassword","setinputpassword","inputconfirmedpassword","setinputconfirmedpassword","data","fname","lname","email","confirmedpassword","password","verify","LoginPage","setUser","checkUser","handleClick","loginForm","action","logoutForm","NavigationComponent","useLocation","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","pathname","Toogle","localStorage","getItem","parse","document","style","setItem","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"+PAiBeA,EAdO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAACC,EAAYC,GAClC,OACE,oBAAYC,UAAU,kBAAtB,SACE,oBAAIA,UAAU,kBAAd,SAAiCF,EAAWG,UADrCF,OCgBAG,EAlBA,SAAC,GAAgB,IAAdD,EAAa,EAAbA,OAAa,EACLE,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,KAG7B,OACE,sBAAKL,UAAU,SAAf,UACE,+BACGC,EAAOK,KADV,MACmBL,EAAOM,aAE1B,qBAAKC,IAAI,kBAAkBC,IAAI,YAC/B,wBAAQC,QAAS,kBAAML,GAASD,IAAhC,yBACCA,GAAQ,cAACO,EAAD,CAAef,YAAaK,EAAOA,a,iBCSnCW,EApBI,SAACC,GAClB,OACE,qBAAKC,KAAK,aAAaC,aAAW,wBAAlC,SACE,cAAC,IAAD,CACEC,UAAWC,KAAKC,KAAKL,EAAMM,WAAaN,EAAMO,cAC9CC,mBAAoB,GACpBC,qBAAsB,GACtBC,aAAcV,EAAMW,gBACpBC,mBAAmB,qBACnBC,kBAAkB,oBAClBC,cAAc,gBACdC,cAAc,gBACdC,kBAAkB,eAClBC,gBAAgB,kBAChBC,kBAAkB,yBCHXC,EAXC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,qBAAKjC,UAAU,UAAf,SACE,6BAAKiC,OCDI,SAASC,IAAY,IAAD,EACP/B,mBAAS,IADF,mBAC1BgC,EAD0B,KACnBC,EADmB,OAERjC,mBAAS,IAFD,mBAE1BkC,EAF0B,KAEnBC,EAFmB,OAGKnC,mBAAS,GAHd,mBAG1BoC,EAH0B,KAGbC,EAHa,OAIPrC,mBAAS,IAJF,mBAI1B8B,EAJ0B,KAInBQ,EAJmB,KAY3BC,EAPe,GAOGH,EAClBI,EAAmBD,EARJ,GAefE,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,kBAAmB,CAC9CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB7C,KAAM6B,MALI,cACRiB,EADQ,gBASIA,EAASC,OATb,OASRC,EATQ,OAUdC,QAAQC,IAAIF,GAEZC,QAAQC,IAAIF,EAAI1D,aACe,IAA3B0D,EAAI1D,YAAY6D,QAA0B,KAAVtB,GAClCM,EAAS,mDACTH,EAAQ,KAERA,EAAQgB,EAAI1D,aAjBA,2CAAH,qDAuBP8D,EAAerB,EAAMsB,MAAMhB,EAAkBD,GAUnD,OACE,sBAAK1C,UAAU,MAAf,UACa,KAAViC,GAAgB,cAAC,EAAD,CAASA,MAAOA,IACjC,sBAAKjC,UAAU,MAAf,UACE,oDACA,uBAAM4D,SAbK,SAACC,GAChBA,EAAEC,iBACqB,KAAnBD,EAAEE,OAAOC,QACXvB,EAAS,IACTG,MAS4B5C,UAAU,cAApC,UACE,uBACEiE,KAAK,OACLC,KAAK,OACLF,MAAO7B,EACPgC,SAAU,SAACC,GAvDnBhC,EAuD4CgC,EAvDjCL,OAAOC,QAwDVK,aAAa,MACbC,YAAY,gBAEd,uBAAOL,KAAK,SAASD,MAAM,iBAI/B,qBAAKhE,UAAU,UAAf,SACG0D,IAAiB,IAChBA,EAAa7D,KAAI,SAAC0E,EAAMxE,GAAP,OAAa,cAAC,EAAD,CAAgBE,OAAQsE,GAAXxE,QAG/C,cAAC,EAAD,CACEqB,aAxEe,GAyEfD,WAAYkB,EAAMoB,OAClBjC,gBA/DkB,SAAC,GAAkB,IAAhBgD,EAAe,EAAfA,SACzBhC,EAAegC,EAAW,S,YCkBfC,EApCI,SAAC,GAAgB,IAAdxE,EAAa,EAAbA,OAAa,EACTE,oBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAG3BqE,EAAU,uCAAG,sBAAA7B,EAAA,6DACjB8B,OAAOC,SAASC,KAAO,UADN,SAGX/B,MAAM,cAAe,CACzBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUlD,KANN,2CAAH,qDAYhB,OACE,sBAAKD,UAAU,SAAf,UACE,+BACGC,EAAOK,KADV,MACmBL,EAAOM,aAE1B,qBAAKC,IAAI,kBAAkBC,IAAI,YAC/B,qBAAKT,UAAU,SACf,wBAAQU,QAAS,kBAAML,GAASD,IAAhC,yBACA,qBAAKJ,UAAU,SACf,wBAAQ8E,GAAG,SAASpE,QAASgE,EAA7B,oBAGCtE,GAAQ,cAACO,EAAD,CAAef,YAAaK,EAAOA,aC1BnC,SAAS8E,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EACT7E,mBAAS,IADA,mBACxC8E,EADwC,KAC3BC,EAD2B,OAEb/E,mBAAS,IAFI,mBAExCgF,EAFwC,KAE7BC,EAF6B,OAGTjF,mBAAS,CAAC,CAAEF,OAAQ,MAHX,mBAGxCoF,EAHwC,KAG3BC,EAH2B,OAItBnF,mBAAS,IAJa,mBAIxCkC,EAJwC,KAIjCC,EAJiC,OAKTnC,mBAAS,GALA,mBAKxCoC,EALwC,KAK3BC,EAL2B,KAQ/C+C,qBAAU,YACS,uCAAG,8BAAA1C,EAAA,sEACKC,MAAM,cAAe,CAC1CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEqC,KAAMR,MAJb,cACZ5B,EADY,gBAOAA,EAASC,OAPT,OAOZC,EAPY,OAQlBhB,EAAQgB,EAAI1D,aARM,2CAAH,qDAWjB6F,KACC,IAGH,IAAM/C,EAlBe,EAkBGH,EAClBI,EAAmBD,EAnBJ,EAqBfgB,EAAerB,EAAMsB,MAAMhB,EAAkBD,GAO7CgD,EAAQ,uCAAG,sBAAA7C,EAAA,6DACf8B,OAAOC,SAASC,KAAO,UADR,SAET/B,MAAM,mBAAoB,CAC9BC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB5C,UAAW0E,EACX3E,KAAM6E,EACNlF,OAAQoF,EACRG,KAAMR,MATK,2CAAH,qDAaRW,EAAoB,SAACvB,GACC,cAAtBA,EAAML,OAAOG,KACfgB,EAAed,EAAML,OAAOC,OACG,SAAtBI,EAAML,OAAOG,MACtBkB,EAAahB,EAAML,OAAOC,QAaxB4B,EAAkB,SAAC/B,GACvB,IAAMgC,EAAM,YAAOR,GACnBQ,EAAOC,KAAK,CAAE7F,OAAQ,KAEtBqF,EAAeO,GAEfhC,EAAEC,kBAoBJ,OACE,qBAAK9D,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,+CAEA,qBAAKA,UAAU,UAAf,SACE,qBAAKQ,IAAI,kBAAkBC,IAAI,cAEjC,qBAAKT,UAAU,SAEf,qBAAKA,UAAU,SAEf,8BACE,uBAAMA,UAAU,YAAY4D,SAtBf,SAACC,GACpBA,EAAEC,iBAEF4B,IACAR,EAAe,IACfE,EAAa,IACbE,EAAe,CAAC,CAAErF,OAAQ,OAgBpB,UACE,8BACE,wBAAOD,UAAU,aAAjB,2BAEE,uBACEA,UAAU,eACViE,KAAK,OACLC,KAAK,OACLF,MAAOmB,EACPhB,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCE,YAAY,cAIlB,8BACE,wBAAOtE,UAAU,aAAjB,2BAEE,uBACEA,UAAU,eACViE,KAAK,OACLC,KAAK,YACLF,MAAOiB,EACPd,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCE,YAAY,mBAIjBe,EAAYxF,KAAI,SAACkG,EAAUC,GAAX,OACf,gCACE,wBAAOhG,UAAU,aAAjB,4BAEE,uBACEA,UAAU,eACViE,KAAK,OACLC,KAAK,SACLF,MAAO+B,EAAS9F,OAChBkE,SAAU,SAACN,GAAD,OApFF,SAACmC,EAAO5B,GAChC,IAAMyB,EAAM,YAAOR,GACnBQ,EAAOG,GAAO/F,OAASmE,EAAML,OAAOC,MAEpCsB,EAAeO,GAEftC,QAAQC,IAAI,eAAiB6B,GA8EIY,CAAkBD,EAAOnC,IAC1CS,YAAY,kBAGhB,qBAAKtE,UAAU,IAAf,SACE,wBACEA,UAAU,MACVU,QAAS,kBAzEA,SAACsF,GAC1B,GAA2B,IAAvBX,EAAY5B,OAAc,CAC5B,IAAMoC,EAAM,YAAOR,GACnBQ,EAAOK,OAAOF,EAAO,GACrBV,EAAeO,IAqEcM,CAAmBH,IAFpC,SAIE,qBAAKxF,IAAI,kBAAkBC,IAAI,cAInC,qBAAKT,UAAU,IAAf,SACE,wBAAQA,UAAU,MAAMU,QAASkF,EAAjC,SACE,qBAAKpF,IAAI,eAAeC,IAAI,cAvBxBuF,MA6BZ,wBAAQ/B,KAAK,SAASjE,UAAU,kBAAhC,yBAMJ,qBAAKA,UAAU,UAAf,SACG0D,IAAiB,IAChBA,EAAa7D,KAAI,SAAC0E,EAAMxE,GAAP,OAAa,cAAC,EAAD,CAAoBE,OAAQsE,GAAXxE,QAGnD,8BACE,cAAC,EAAD,CACEqB,aAvKW,EAwKXD,WAAYkB,EAAMoB,OAClBjC,gBAjJc,SAAC,GAAkB,IAAhBgD,EAAe,EAAfA,SACzBhC,EAAegC,EAAW,aCjC9B,IAUe4B,EAVE,SAAC,GAAe,IAAbnE,EAAY,EAAZA,MAClB,OACE,qBAAKjC,UAAU,WAAf,SACE,6BAAKiC,OCFI,SAASoE,IAAc,IAAD,EACClG,mBAAS,IADV,mBAC5BmG,EAD4B,KAChBC,EADgB,OAECpG,mBAAS,IAFV,mBAE5BqG,EAF4B,KAEhBC,EAFgB,OAGCtG,mBAAS,IAHV,mBAG5BuG,EAH4B,KAGhBC,EAHgB,OAIOxG,mBAAS,IAJhB,mBAI5ByG,EAJ4B,KAIbC,EAJa,OAKyB1G,mBAAS,IALlC,mBAK5B2G,EAL4B,KAKJC,EALI,OAMT5G,mBAAS,IANA,mBAM5B8B,EAN4B,KAMrBQ,EANqB,KAQ7BuE,EAAO,CACXC,MAAOT,EACPU,MAAOR,EACPS,MAAOb,EACPc,kBAAmBN,EACnBO,SAAUT,GAENhE,EAAO,uCAAG,4BAAAC,EAAA,yDACdJ,EAAS,MACLuE,EAAKI,oBAAsBJ,EAAKK,UAAYL,EAAKK,SAAS5D,QAAU,GAF1D,iCAGWX,MAAM,UAAW,CACtCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU6D,KANX,cAGN5D,EAHM,gBAQMA,EAASC,OARf,cAUJiE,OACN7E,EAAS,oDAETA,EAAS,wBAbC,wBAgBZA,EACE,qEAjBU,4CAAH,qDAqBPkD,EAAoB,SAACvB,GACC,UAAtBA,EAAML,OAAOG,KACfqC,EAAcnC,EAAML,OAAOC,OACI,UAAtBI,EAAML,OAAOG,KACtBuC,EAAcrC,EAAML,OAAOC,OACI,UAAtBI,EAAML,OAAOG,MACtByC,EAAcvC,EAAML,OAAOC,OAC3BT,QAAQC,IAAI,aAAeiD,IACI,aAAtBrC,EAAML,OAAOG,KACtB2C,EAAiBzC,EAAML,OAAOC,OAE9B+C,EAA0B3C,EAAML,OAAOC,QAe3C,OACE,sBAAKhE,UAAU,MAAf,UACa,KAAViC,GACW,yBAAVA,GACU,qDAAVA,GACE,cAAC,EAAD,CAASA,MAAOA,IAET,KAAVA,GACW,yBAAVA,GAEE,sEADFA,GAEE,cAAC,EAAD,CAAUA,MAAOA,IAEV,KAAVA,GACW,qDAAVA,GAEE,sEADFA,GAEE,cAAC,EAAD,CAASA,MAAOA,IAGpB,sBAAKjC,UAAU,MAAf,UACE,yCACA,uBAAMA,UAAU,WAAW4D,SAjCZ,SAACC,GACpBA,EAAEC,iBACFlB,IACA6D,EAAc,IACdE,EAAc,IACdJ,EAAc,IACdA,EAAc,IACdM,EAAiB,IACjBE,EAA0B,KAyBtB,UACE,qBAAK/G,UAAU,OAAf,SACE,uBACEiE,KAAK,OACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,eACV8E,GAAG,YACHZ,KAAK,QACLF,MAAOwC,EACPlC,YAAY,YAGhB,qBAAKtE,UAAU,OAAf,SACE,uBACEiE,KAAK,OACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,eACV8E,GAAG,WACHZ,KAAK,QACLF,MAAO0C,EACPpC,YAAY,WAGhB,qBAAKtE,UAAU,OAAf,SACE,uBACEiE,KAAK,QACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,eACV8E,GAAG,aACHZ,KAAK,QACLF,MAAOsC,EACPhC,YAAY,YAGhB,qBAAKtE,UAAU,OAAf,SACE,uBACEiE,KAAK,WACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,oBACV8E,GAAG,gBACHZ,KAAK,WACLF,MAAO4C,EACPtC,YAAY,eAGhB,qBAAKtE,UAAU,OAAf,SACE,uBACEiE,KAAK,WACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,oBACV8E,GAAG,cACHZ,KAAK,oBACLF,MAAO8C,EACPxC,YAAY,uBAIhB,wBAAQL,KAAK,SAASjE,UAAU,kBAAhC,+BC/IK,SAASuH,IAAa,IAAD,EACEpH,mBAAS,IADX,mBAC3BmG,EAD2B,KACfC,EADe,OAEQpG,mBAAS,IAFjB,mBAE3ByG,EAF2B,KAEZC,EAFY,OAIV1G,mBAAS,MAJC,mBAI3BqF,EAJ2B,KAIrBgC,EAJqB,KAMlCjC,qBAAU,YACO,uCAAG,4BAAA1C,EAAA,sEACSC,MAAM,YADf,8BAC4BO,OAD5B,OACVC,EADU,OAGhBkE,EAAQlE,EAAIkC,MAHI,2CAAH,qDAMfiC,KACC,IAEH,IAAM9B,EAAoB,SAACvB,GACC,aAAtBA,EAAML,OAAOG,KACfqC,EAAcnC,EAAML,OAAOC,OAE3B6C,EAAiBzC,EAAML,OAAOC,QAI5B0D,EAAW,uCAAG,sBAAA7E,EAAA,sEACAC,MAAM,WADN,gBAIhB6B,OAAOC,SAASC,KAAO,KAGzB2C,EAAQ,MAPU,2CAAH,qDAUXG,EACJ,qBAAK3H,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,uBAAM4H,OAAO,UAAU7E,OAAO,OAAO/C,UAAU,SAA/C,UACE,uBACEiE,KAAK,QACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,oBACVkE,KAAK,WACLF,MAAOsC,EACPhC,YAAY,UAGd,uBACEL,KAAK,WACLE,SAAU,SAACC,GAAD,OAAWuB,EAAkBvB,IACvCpE,UAAU,oBACVkE,KAAK,WACLF,MAAO4C,EACPtC,YAAY,aAGd,wBAAQtE,UAAU,kBAAkBiE,KAAK,SAASD,MAAM,SAAxD,0BAQF6D,EACJ,gCACGrC,EACD,wBAAQxF,UAAU,0BAA0BU,QAASgH,EAArD,wBAKJ,OAAO,8BAAMlC,EAAOqC,EAAaF,ICvEpB,SAASG,EAAT,GAA4C,IAAb9C,EAAY,EAAZA,SACtCJ,EAAWmD,cAEjB,OACE,qBAAK/H,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,wBAAwBgI,GAAG,IAA3C,SACE,qBAAKxH,IAAI,kBAAkBC,IAAI,cAEjC,wBACET,UAAU,iBACViE,KAAK,SACLgE,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdrH,aAAW,oBAPb,SASE,sBAAMf,UAAU,0BAElB,sBAAKA,UAAU,2BAA2B8E,GAAG,yBAA7C,UACE,qBAAI9E,UAAU,kCAAd,UACGgF,GACC,oBAAIhF,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UACE,YACuB,YAAtB4E,EAASyD,SAAyB,UAAY,IAEjDL,GAAG,UALL,8BAWFhD,GACA,oBAAIhF,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UACE,YACuB,YAAtB4E,EAASyD,SAAyB,UAAY,IAEjDL,GAAG,UALL,yBAaN,cAACT,EAAD,YCnDV,IAkDee,EAlDA,WAAO,IAAD,EACKnI,oBAAS,GADd,mBACZC,EADY,KACNC,EADM,KAGnBkF,qBAAU,WACR,IAAMyB,EAAOrC,OAAO4D,aAAaC,QAAQ,YAEzCnI,EAAQ6C,KAAKuF,MAAMzB,IAEjB0B,SAASzF,KAAK0F,MADH,UAAT3B,EACoB,uBAEA,sBAEvB,IAEHzB,qBAAU,WACRZ,OAAO4D,aAAaK,QAAQ,WAAY1F,KAAKC,UAAU/C,OAazD,OACE,sBAAKJ,UAAU,MAAf,UACE,yCACCI,EACC,gCACE,wBAAQJ,UAAU,aAAaU,QAfrB,WAChBL,GAAQ,GACRqI,SAASzF,KAAK0F,MAAQ,wBAahB,SACE,qBAAKnI,IAAI,wBAAwBC,IAAI,YAEvC,gDAGF,gCACE,wBAAQT,UAAU,aAAaU,QAjBtB,WACfL,GAAQ,GACRqI,SAASzF,KAAK0F,MAAQ,qBAehB,SACE,qBAAKnI,IAAI,uBAAuBC,IAAI,WAEtC,mDCFKoI,MAhCf,WAAgB,IAAD,EACW1I,mBAAS,MADpB,mBACNqF,EADM,KACAgC,EADA,KAab,OAVAjC,qBAAU,WACR,IAAMkC,EAAS,uCAAG,4BAAA5E,EAAA,sEACSC,MAAM,YADf,8BAC4BO,OAD5B,OACVC,EADU,OAGhBC,QAAQC,IAAI,WAAYF,EAAIkC,MAC5BgC,EAAQlE,EAAIkC,MAJI,2CAAH,qDAMfjC,QAAQC,IAAI,iBACZiE,MACC,IAED,eAAC,IAAD,WACE,cAACK,EAAD,CAAqB9C,SAAUQ,IAC/B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,UAAlB,SACGvD,EAAO,cAACT,EAAD,CAAYC,SAAUQ,IAAW,cAACtD,EAAD,MAE3C,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC7G,EAAD,MAEF,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,UAAlB,SACIvD,EAAwB,cAACtD,EAAD,IAAjB,cAACmE,EAAD,SAGb,cAAC,EAAD,QCjCN2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.e88e33ab.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RecipeDetails = ({ ingredients }) => {\n  return ingredients.map((ingredient, i) => {\n    return (\n      <ul key={i} className=\"ingredient-list\">\n        <li className=\"ingredient-text\">{ingredient.recipe}</li>\n      </ul>\n    );\n  });\n};\n\nRecipeDetails.propTypes = {\n  ingredients: PropTypes.array.isRequired,\n};\n\nexport default RecipeDetails;\n","import React, { useState } from \"react\";\nimport RecipeDetails from \"./RecipeDetail\";\nimport PropTypes from \"prop-types\";\n\nconst Recipe = ({ recipe }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"recipe\">\n      <h2>\n        {recipe.item} - {recipe.full_name}\n      </h2>\n      <img src=\"/img/dishes.png\" alt=\"Profile\" />\n      <button onClick={() => setShow(!show)}>Ingredients</button>\n      {show && <RecipeDetails ingredients={recipe.recipe} />}\n    </div>\n  );\n};\n\nRecipe.propTypes = {\n  recipe: PropTypes.object.isRequired,\n};\nexport default Recipe;\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = (props) => {\n  return (\n    <div role=\"navigation\" aria-label=\"Pagination Navigation\">\n      <ReactPaginate\n        pageCount={Math.ceil(props.totalPosts / props.postsPerPage)}\n        pageRangeDisplayed={10}\n        marginPagesDisplayed={10}\n        onPageChange={props.handlePageClick}\n        containerClassName=\"paginate-container\"\n        previousClassName=\"paginate-previous\"\n        nextClassName=\"paginate-next\"\n        pageClassName=\"paginate-page\"\n        pageLinkClassName=\"pagination-a\"\n        activeClassName=\"paginate-active\"\n        disabledClassName=\"paginate-disabled\"\n      ></ReactPaginate>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst NoAlert = ({ alert }) => {\n  return (\n    <div className=\"noalert\">\n      <h3>{alert}</h3>\n    </div>\n  );\n};\n\nNoAlert.propTypes = {\n  alert: PropTypes.string.isRequired,\n};\nexport default NoAlert;\n","import React, { useState } from \"react\";\nimport Recipe from \"../components/Recipe\";\nimport Pagination from \"../components/Pagination.js\";\nimport NoAlert from \"../components/NoAlert\";\n\nexport default function HomePage() {\n  const [query, setQuery] = useState(\"\");\n  const [foods, setfood] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [alert, setAlert] = useState(\"\");\n  const postsPerPage = 10;\n\n  const onChangeSearch = (e) => {\n    setQuery(e.target.value);\n  };\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  // Change page\n  const handlePageClick = ({ selected }) => {\n    setCurrentPage(selected + 1);\n  };\n\n  const getData = async () => {\n    const response = await fetch(\"/GetIngredients\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        item: query,\n      }),\n    });\n\n    const res = await response.json();\n    console.log(res);\n\n    console.log(res.ingredients);\n    if (res.ingredients.length === 0 && query !== \"\") {\n      setAlert(\"Sorry, we could not find anything that matches!\");\n      setfood([]);\n    } else {\n      setfood(res.ingredients);\n    }\n\n    //console.log(food);\n  };\n\n  const currentPosts = foods.slice(indexOfFirstPost, indexOfLastPost);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (e.target.value !== \"\") {\n      setAlert(\"\");\n      getData();\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      {alert !== \"\" && <NoAlert alert={alert} />}\n      <div className=\"col\">\n        <h1>Search Your Recipe</h1>\n        <form onSubmit={onSubmit} className=\"search-form\">\n          <input\n            type=\"text\"\n            name=\"item\"\n            value={query}\n            onChange={(event) => onChangeSearch(event)}\n            autoComplete=\"off\"\n            placeholder=\"Search Food\"\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n      </div>\n\n      <div className=\"recipes\">\n        {currentPosts !== [] &&\n          currentPosts.map((food, i) => <Recipe key={i} recipe={food} />)}\n      </div>\n\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={foods.length}\n        handlePageClick={handlePageClick}\n      ></Pagination>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport RecipeDetails from \"./RecipeDetail\";\nimport PropTypes from \"prop-types\";\n\nconst UserRecipe = ({ recipe }) => {\n  const [show, setShow] = useState(false);\n\n  const DeletePost = async () => {\n    window.location.href = \"/create\";\n\n    await fetch(\"/DeletePost\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(recipe),\n    });\n\n    //console.log(food);\n  };\n\n  return (\n    <div className=\"recipe\">\n      <h2>\n        {recipe.item} - {recipe.full_name}\n      </h2>\n      <img src=\"/img/dishes.png\" alt=\"Profile\" />\n      <div className=\"mb-3\"></div>\n      <button onClick={() => setShow(!show)}>Ingredients</button>\n      <div className=\"mb-3\"></div>\n      <button id=\"delete\" onClick={DeletePost}>\n        Delete\n      </button>\n      {show && <RecipeDetails ingredients={recipe.recipe} />}\n    </div>\n  );\n};\n\nUserRecipe.propTypes = {\n  recipe: PropTypes.object.isRequired,\n};\n\nexport default UserRecipe;\n","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"../components/Pagination.js\";\nimport UserRecipe from \"../components/UserRecipe\";\nimport PropTypes from \"prop-types\";\n\nexport default function CreatePage({ username }) {\n  const [inputFields, setInputFields] = useState(\"\");\n  const [inputFood, setinputFood] = useState(\"\");\n  const [inputRecipe, setInputRecipe] = useState([{ recipe: \"\" }]);\n  const [foods, setfood] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 6;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const response = await fetch(\"/Initialize\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user: username }),\n      });\n\n      const res = await response.json();\n      setfood(res.ingredients);\n    };\n\n    getUserData();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  const currentPosts = foods.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const handlePageClick = ({ selected }) => {\n    setCurrentPage(selected + 1);\n  };\n\n  const PostData = async () => {\n    window.location.href = \"/create\";\n    await fetch(\"/PostIngredients\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        full_name: inputFields,\n        item: inputFood,\n        recipe: inputRecipe,\n        user: username,\n      }),\n    });\n  };\n  const handleChangeInput = (event) => {\n    if (event.target.name === \"full_name\") {\n      setInputFields(event.target.value);\n    } else if (event.target.name === \"food\") {\n      setinputFood(event.target.value);\n    }\n  };\n\n  const handleInputRecipe = (index, event) => {\n    const values = [...inputRecipe];\n    values[index].recipe = event.target.value;\n\n    setInputRecipe(values);\n\n    console.log(\"inputRecipe \" + inputRecipe);\n  };\n\n  const handleAddFields = (e) => {\n    const values = [...inputRecipe];\n    values.push({ recipe: \"\" });\n\n    setInputRecipe(values);\n\n    e.preventDefault();\n  };\n\n  const handleRemoveFields = (index) => {\n    if (inputRecipe.length !== 1) {\n      const values = [...inputRecipe];\n      values.splice(index, 1);\n      setInputRecipe(values);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    PostData();\n    setInputFields(\"\");\n    setinputFood(\"\");\n    setInputRecipe([{ recipe: \"\" }]);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Create Recipe</h1>\n\n        <div className=\"profile\">\n          <img src=\"/img/dishes.png\" alt=\"Profile\" />\n        </div>\n        <div className=\"mb-3\"></div>\n\n        <div className=\"mb-3\"></div>\n\n        <div>\n          <form className=\"form-name\" onSubmit={handleSubmit}>\n            <div>\n              <label className=\"form-label\">\n                Food Category:\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"food\"\n                  value={inputFood}\n                  onChange={(event) => handleChangeInput(event)}\n                  placeholder=\"Food\"\n                />\n              </label>\n            </div>\n            <div>\n              <label className=\"form-label\">\n                Specific Name:\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"full_name\"\n                  value={inputFields}\n                  onChange={(event) => handleChangeInput(event)}\n                  placeholder=\"Full Name\"\n                />\n              </label>\n            </div>\n            {inputRecipe.map((inputRec, index) => (\n              <div key={index}>\n                <label className=\"form-label\">\n                  Add Ingredient:\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"recipe\"\n                    value={inputRec.recipe}\n                    onChange={(e) => handleInputRecipe(index, e)}\n                    placeholder=\"Ingredient\"\n                  />\n                </label>\n                <div className=\"b\">\n                  <button\n                    className=\"btn\"\n                    onClick={() => handleRemoveFields(index)}\n                  >\n                    <img src=\"/img/remove.png\" alt=\"minus\" />\n                  </button>\n                </div>\n\n                <div className=\"b\">\n                  <button className=\"btn\" onClick={handleAddFields}>\n                    <img src=\"/img/add.png\" alt=\"add\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n\n        <div className=\"recipes\">\n          {currentPosts !== [] &&\n            currentPosts.map((food, i) => <UserRecipe key={i} recipe={food} />)}\n        </div>\n\n        <div>\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={foods.length}\n            handlePageClick={handlePageClick}\n          ></Pagination>\n        </div>\n      </div>\n    </div>\n  );\n}\nCreatePage.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst YesAlert = ({ alert }) => {\n  return (\n    <div className=\"yesalert\">\n      <h3>{alert}</h3>\n    </div>\n  );\n};\nYesAlert.propTypes = {\n  alert: PropTypes.string.isRequired,\n};\nexport default YesAlert;\n","import React, { useState } from \"react\";\nimport YesAlert from \"../components/YesAlert\";\nimport NoAlert from \"../components/NoAlert\";\n\nexport default function SignupPage() {\n  const [inputemail, setinputemail] = useState(\"\");\n  const [inputfname, setinputfname] = useState(\"\");\n  const [inputlname, setinputlname] = useState(\"\");\n  const [inputpassword, setinputpassword] = useState(\"\");\n  const [inputconfirmedpassword, setinputconfirmedpassword] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n\n  const data = {\n    fname: inputfname,\n    lname: inputlname,\n    email: inputemail,\n    confirmedpassword: inputconfirmedpassword,\n    password: inputpassword,\n  };\n  const getData = async () => {\n    setAlert(\"\");\n    if (data.confirmedpassword === data.password && data.password.length >= 8) {\n      const response = await fetch(\"/signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      const res = await response.json();\n\n      if (res.verify) {\n        setAlert(\"Signup successful. Please login to share recipe.\");\n      } else {\n        setAlert(\"Email already in use\");\n      }\n    } else {\n      setAlert(\n        \"Invaild entree! Password must be 8 or more characters. Try again.\"\n      );\n    }\n  };\n  const handleChangeInput = (event) => {\n    if (event.target.name === \"email\") {\n      setinputemail(event.target.value);\n    } else if (event.target.name === \"fname\") {\n      setinputfname(event.target.value);\n    } else if (event.target.name === \"lname\") {\n      setinputlname(event.target.value);\n      console.log(\"inputlname\" + setinputfname);\n    } else if (event.target.name === \"password\") {\n      setinputpassword(event.target.value);\n    } else {\n      setinputconfirmedpassword(event.target.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getData();\n    setinputfname(\"\");\n    setinputlname(\"\");\n    setinputemail(\"\");\n    setinputemail(\"\");\n    setinputpassword(\"\");\n    setinputconfirmedpassword(\"\");\n  };\n\n  return (\n    <div className=\"row\">\n      {alert !== \"\" &&\n        alert !== \"Email already in use\" &&\n        alert !== \"Signup successful. Please login to share recipe.\" && (\n          <NoAlert alert={alert} />\n        )}\n      {alert !== \"\" &&\n        alert !== \"Email already in use\" &&\n        alert !==\n          \"Invaild entree! Password must be 8 or more characters. Try again.\" && (\n          <YesAlert alert={alert} />\n        )}\n      {alert !== \"\" &&\n        alert !== \"Signup successful. Please login to share recipe.\" &&\n        alert !==\n          \"Invaild entree! Password must be 8 or more characters. Try again.\" && (\n          <NoAlert alert={alert} />\n        )}\n\n      <div className=\"col\">\n        <h1>Sign Up</h1>\n        <form className=\"form-add\" onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <input\n              type=\"name\"\n              onChange={(event) => handleChangeInput(event)}\n              className=\"form-control\"\n              id=\"firstName\"\n              name=\"fname\"\n              value={inputfname}\n              placeholder=\"First\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"name\"\n              onChange={(event) => handleChangeInput(event)}\n              className=\"form-control\"\n              id=\"lastName\"\n              name=\"lname\"\n              value={inputlname}\n              placeholder=\"Last\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"email\"\n              onChange={(event) => handleChangeInput(event)}\n              className=\"form-control\"\n              id=\"InputEmail\"\n              name=\"email\"\n              value={inputemail}\n              placeholder=\"Email\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"password\"\n              onChange={(event) => handleChangeInput(event)}\n              className=\"form-control me-2\"\n              id=\"InputPassword\"\n              name=\"password\"\n              value={inputpassword}\n              placeholder=\"Password\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"password\"\n              onChange={(event) => handleChangeInput(event)}\n              className=\"form-control me-2\"\n              id=\"ConPassword\"\n              name=\"confirmedpassword\"\n              value={inputconfirmedpassword}\n              placeholder=\"Confirm Password\"\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Join now\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function LoginPage() {\n  const [inputemail, setinputemail] = useState(\"\");\n  const [inputpassword, setinputpassword] = useState(\"\");\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const checkUser = async () => {\n      const res = await (await fetch(\"/getUser\")).json();\n\n      setUser(res.user);\n    };\n\n    checkUser();\n  }, []);\n\n  const handleChangeInput = (event) => {\n    if (event.target.name === \"username\") {\n      setinputemail(event.target.value);\n    } else {\n      setinputpassword(event.target.value);\n    }\n  };\n\n  const handleClick = async () => {\n    const res = await fetch(\"/logout\");\n\n    if (res) {\n      window.location.href = \"/\";\n    }\n\n    setUser(null);\n  };\n\n  const loginForm = (\n    <div className=\"row\">\n      <div className=\"col\">\n        <form action=\"/signin\" method=\"post\" className=\"d-flex\">\n          <input\n            type=\"email\"\n            onChange={(event) => handleChangeInput(event)}\n            className=\"form-control me-2\"\n            name=\"username\"\n            value={inputemail}\n            placeholder=\"Email\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={(event) => handleChangeInput(event)}\n            className=\"form-control me-2\"\n            name=\"password\"\n            value={inputpassword}\n            placeholder=\"Password\"\n          />\n\n          <button className=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n\n  const logoutForm = (\n    <div>\n      {user}\n      <button className=\"btn-outline-success btn\" onClick={handleClick}>\n        Log out\n      </button>\n    </div>\n  );\n  return <div>{user ? logoutForm : loginForm}</div>;\n}\n","import LoginPage from \"../pages/LoginPage\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport default function NavigationComponent({ username }) {\n  const location = useLocation();\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand nav-logo\" to=\"/\">\n          <img src=\"/img/dishes.png\" alt=\"Profile\" />\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            {username && (\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    \"nav-link\" +\n                    (location.pathname === \"/create\" ? \" active\" : \"\")\n                  }\n                  to=\"/create\"\n                >\n                  Create Recipe\n                </Link>\n              </li>\n            )}\n            {!username && (\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    \"nav-link\" +\n                    (location.pathname === \"/signup\" ? \" active\" : \"\")\n                  }\n                  to=\"/signup\"\n                >\n                  Signup\n                </Link>\n              </li>\n            )}\n          </ul>\n\n          <LoginPage />\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nconst Toogle = () => {\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    const data = window.localStorage.getItem(\"mytoogle\");\n\n    setShow(JSON.parse(data));\n    if (data === \"false\") {\n      document.body.style = \"background: #121212;\";\n    } else {\n      document.body.style = \"background: none;\";\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"mytoogle\", JSON.stringify(show));\n  });\n\n  const LightMode = () => {\n    setShow(false);\n    document.body.style = \"background: #121212;\";\n  };\n\n  const DarkMode = () => {\n    setShow(true);\n    document.body.style = \"background: none;\";\n  };\n\n  return (\n    <div className=\"col\">\n      <div>Switch</div>\n      {show ? (\n        <div>\n          <button className=\"toogle-btn\" onClick={LightMode}>\n            <img src=\"/img/light-toggle.png\" alt=\"light\" />\n          </button>\n          <div>Light Mode</div>\n        </div>\n      ) : (\n        <div>\n          <button className=\"toogle-btn\" onClick={DarkMode}>\n            <img src=\"/img/dark-toggle.png\" alt=\"dark\" />\n          </button>\n          <div>Dark Mode</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Toogle;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage.js\";\nimport CreatePage from \"./pages/CreatePage.js\";\nimport SignupPage from \"./pages/SignupPage.js\";\nimport NavigationComponent from \"./components/NavigationComponent.js\";\nimport Toogle from \"./components/Toogle.js\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const checkUser = async () => {\n      const res = await (await fetch(\"/getUser\")).json();\n\n      console.log(\"Got user\", res.user);\n      setUser(res.user);\n    };\n    console.log(\"Checking user\");\n    checkUser();\n  }, []);\n  return (\n    <Router>\n      <NavigationComponent username={user}></NavigationComponent>\n      <Switch>\n        <Route exact path=\"/create\">\n          {user ? <CreatePage username={user} /> : <HomePage />}\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/signup\">\n          {!user ? <SignupPage /> : <HomePage />}\n        </Route>\n      </Switch>\n      <Toogle></Toogle>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//// If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}